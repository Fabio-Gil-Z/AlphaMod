--- KEYWORDS:
 0  REAL    ARGUMENTS               0 0.00  # real arguments to the math operation
32  REAL    MATRIX_OFFSET           1 0.00  # substitution matrix offset for local alignment
33  REAL    MATRIX_OFFSET_3D        1 -0.1  # substitution matrix offset for local alignment (RMS)
34  REAL    VIOL_REPORT_CUT        39 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 999 999 999 999 4.5 4.5 4.5 4.5 4.5 4.5 999 6.5 4.5 4.5 4.5 4.5 4.5 999 999 999 4.5 4.5 999 999 999 999 # cutoffs for reporting relative violations
35  REAL    DEBUG_FUNCTION_CUTOFF   3 0.01 0.001 0.1 # cutoffs for reporting differences between
                                            # numerical and analytical derivatives: absolute,
                                            # relative errors, factor_for_indiv_rstrs
36  REAL    TRANSLATION             3 0.0 0.0 0.0 # translation vector for MODEL
42  REAL    MIN_ATOM_SHIFT          1 0.010 # minimal atomic shift for the optimization convergence test
43  REAL    DEVIATION               1 0.0   # coordinate randomizaton amplitude in angstroms
44  REAL    RMS_CUTOFFS            11 3.5 3.5 60 60 15 60 60 60 60 60 60 # cutoffs for RMS, DRMS,
                                            # Alpha Phi Psi Omega chi1 chi2 chi3 chi4 chi5
45  REAL    TEMPERATURE             1 293.0 # temperature for MD simulation in K
46  REAL    MD_TIME_STEP            1 4.0   # time step for MD in fs
50  REAL    ROTATION_MATRIX         9 1 0 0 0 1 0 0 0 1 # rotation matrix for MODEL
51  REAL    BASIS_RELATIVE_WEIGHT   1 0.05  # the cutoff weight of basis pdf's for their removal
52  REAL    SYMMETRY_WEIGHT         1 1.0   # the weight of the symmetry objective function term
53  REAL    MAXIMAL_DISTANCE        1 999.  # maximal distance for distance restraints
54  REAL    RESTRAINTS_FILTER      39 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 # keep restraints?
55  REAL    RESTRAINT_PARAMETERS    0 3 1 3 3 4 2 0   0.0 0.087   # restraint parameters
56  REAL    SPHERE_RADIUS           1 10.0  # sphere radius for atoms selection
57  REAL    SELECTION_SLAB          5 -9999 9999 0 0 0 # slab for atoms selection:
                                            # \Z{dz1} \Z{dz2} \Z{xtrans} \Z{ytrans} \Z{ztrans}
58  REAL    PICK_HOT_CUTOFF         1 4.0   # radius for picking hot atoms
59  REAL    CAP_ATOM_SHIFT          1 0.2   # limit for atomic shifts in optimization
60  REAL    MOLPDF                  1 0.0   # value of objective function
61  REAL    GAP_PENALTIES_3D        2 0.0 1.75 # gap creation and extension penalties for
                                            # structure/structure superposition
63  REAL    RESTRAINT_STDEV         2 0.0 1.0 # transforming factors for standard deviations
                                            # (y=a+bx) in models 1--6 or standard deviation
                                            # for model 7 (a)
66  REAL    ROTATION_ANGLE          1 0.0   # rotation of MODEL around axis [degrees]
67  REAL    ROTATION_AXIS           3 1.0 0.0 0.0 # rotation axis for MODEL
68  REAL    SPLINE_DX               1 0.5   # interval size for splining restraints
69  REAL    SPLINE_RANGE            1 4.0   # range of the splines
70  REAL    GAP_PENALTIES_2D        9 3.5 3.5 3.5 0.2 4.0 6.5 2.0 0. 0. # gap penalties for
                                            # sequence/structure alignment: helix, beta,
                                            # accessibility, straightness, and CA--CA distance
                                            # factor, dst min, dst power, t, structure_profile ;
                                            # best U,V=-100,0
71  REAL    SCHEDULE_SCALE         39 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
                                           # factors for physical restraint types in scaling the schedule
72  REAL    CLUSTER_CUT             1 -1.0  # definition of a cluster
73  REAL    GAP_PENALTIES_1D        2 -900 -50 # gap creation and extension penalties for
                                            # sequence/sequence alignment
74  REAL    FAST_SEARCH_CUTOFF      1 1.0   # if FAST_SEARCH is ON only sequences with database scan
                                            # significance higher than this value are considered for
                                            # randomization significance
75  REAL    VIOL_REPORT_CUT2       39 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0
76  REAL    SIGNIF_CUTOFF           2 4.0 5.0 # cutoff for adding sequences to alignment, max
                                            # difference from the best
77  REAL    SEGMENT_CUTOFF          1 999999 # cutoff for writing out an alignment in SEGMENT_MATCHING
78  REAL    FIX_OFFSETS             5 0. -1. -2. -3. -4. # offsets of the ALIGN2D alignment
                                            # score for "fixed" positions indicated by ' 123456789'
                                            # in line '_fix_pos'
79  REAL    PSA_INTEGRATION_STEP    1  0.1  # integration step for WRITE_DATA
80  REAL    ATOM_ACCESSIBILITY      1  1.0  # accessible atoms for MAKE_REGION
81  REAL    PROBE_RADIUS            1  1.4  # probe_radius for WRITE_DATA
82  REAL    REFERENCE_DISTANCE      1  3.5  # cutoff for selecting reference positions in SUPERPOSE
83  REAL    SUBOPT_OFFSET           1  0.0  # offset for residue-residue score in getting
                                            # suboptimals in ALIGN/ALIGN2D
84  REAL    SMOOTH_PROF_WEIGHT      1  10   # for smoothing the profile aa frequency with a prior
85  REAL    NEIGHBOR_CUTOFF         1  6.0  # for defining atom-atom contacts in WRITE_DATA
86  REAL    MINIMAL_RESOLUTION      1  99.0 # resolution threshold to select chains
87  REAL    GAP_PENALTIES           2 2. 0.5 # gap creation and extension penalties for SALIGN
88  REAL    FEATURE_WEIGHTS         6 1. 0. 0. 0. 0. 0.# feature weights for SALIGN
89  REAL    GAP_GAP_SCORE           1 0. # dissimilarity score for aligning gap with gap, in SALIGN
90  REAL    GAP_RESIDUE_SCORE       1 0.    # dissimilarity score for aligning gap with residue,
                                            # in SALIGN
91  REAL    GRID_UNIT               1 1.    # grid size for cavities calculation in WRITE_DATA
92  REAL    MIN_ALN_SEQ_ID          1 40.   # minimal alignment sequence identity in BUILD_PROFILE
93  REAL    RCUTP                   1 3.0   # Radius of cut-off for a short sphere of atoms
94  REAL    RCUTL                   1 5.0   # Radius of cut-off for a long  sphere of atoms
95  REAL    RESTRAINT_STDEV2        3 0. 0. 0. # transforming standard deviation in models
                                            # 3--6: S' = S + [ a + b max(0, c-g) ]
96  REAL    MAX_ALN_EVALUE          1 0.1   # Max. E-value of alignments to include in BUILD_PROFILE
97  REAL    VMIN                    1 7.5   # Minimum volume [A^3] of a cluster of internal cavities
98  REAL    RLINK                   1 1.2   # Radius of cut-off to link in a cluster of internal cavities
99  REAL    MATRIX_SCALING_FACTOR   1 0.0069 # substitution matrix scoring parameters, lambda
                                            # and kappa - used by build_profile
100 REAL    FILTER_VALUES           2 0. 0. # filter parameters for EM_GRID_SEARCH
101 REAL    VOXEL_SIZE              1 0     # EM density map voxel size for EM_GRID_SEARCH
102 REAL    RESOLUTION              1 0     # EM density map resolution for EM_GRID_SEARCH
103 REAL    ANGULAR_STEP_SIZE       1 0     # Angular search step size in degrees for EM_GRID_SEARCH
104 REAL    ALN_SCORE               1 -999  # Alignment score out put from the alignment routines
105 REAL    OVERHANG_FACTOR         1 0.4   # Factor to multiply seq. length diff with when auto_overhang is on
106 REAL    DISTNGH                 1 6.0   # Maximum distance to consider residues as neighbors
107 REAL    CCMATRIX_OFFSET         1 -100  # Offset value for the scoring matrix in PPSCAN
107 REAL    PX                      1 0     # x origin of EM density map
108 REAL    PY                      1 0     # y origin of EM density map
109 REAL    PZ                      1 0     # z origin of EM density map
 1  INTEGER IO_UNIT                 1  30   # IO unit for file operations
 2  INTEGER ID1                     1  1    # ID1 for filename construction
 3  INTEGER ID2                     1  1    # ID2 for filename construction
 4  INTEGER NUMBER_PLACES           2  5 2  # pre- and post-decimal point places
 5  INTEGER FILE_EXISTS             1 0     # an output flag: 0 | 1
 6  INTEGER OUTPUT_CONTROL          5 1 0 1 1 0 # selects output, flow-control msgs, warnings,
                                            # errors, dynamic mem msgs
 7  INTEGER STOP_ON_ERROR           1 1     # whether to stop on error
 8  INTEGER ERROR_STATUS            1 0     # application error status
 9  INTEGER NUMBER_LINES            1 0     # number of lines in the newly opened file
31  INTEGER SCHEDULE_STEP           1 1     # schedule step for optimization
32  INTEGER ROUTINE_TYPE            1 1     # generic routine type for a miscellaneous command
35  INTEGER RESIDUE_GROUPING        1 1 #
36  INTEGER MAX_ITERATIONS          1 200   # maximal iterations in optimization
37  INTEGER RAND_SEED               1 -8123 # random seed from -50000 to -2
38  INTEGER COMPARE_MODE            1 3     # selects the type of comparison: 1 | 2 | 3
39  INTEGER EXTEND_HOT_SPOT         1 0     # whether to extend hot spots
41  INTEGER RENUMBER_RESIDUES       0       # starting residue index for renumbering residues
43  INTEGER DISTANCE_RSR_MODEL      1 1     # the model for calculating distance restraints: 1--7
44  INTEGER ACCESSIBILITY_TYPE      1 8     # type of solvent accessibility: 1--10
45  INTEGER RESIDUE_SPAN_RANGE      2 0 99999 # range of residues spanning the allowed distances;
                                            # for MAKE_RESTRAINTS, PICK_RESTRAINTS, non-bonded
                                            # dynamic pairs
46  INTEGER MAX_GAP_LENGTH          1 999999 # maximal length of gap in protein comparisons
47  INTEGER OPTIMIZATION_METHOD     1 -999  # type of optimization method: 1 | 3
48  INTEGER GAP_EXTENSION           2 2 1   # extend insertions/deletions for that many residues,
                                            # in PICK_ATOMS
 0  INTEGER NUMB_OF_SEQUENCES       1 0     # number of sequences in the alignment
50  INTEGER TRACE_OUTPUT            1 0     # modulus for writing information about optimization
                                            # iterations: 0 for nothing
51  INTEGER SEARCH_TOP_LIST         1 20    # the length of the output hits list
52  INTEGER EQUILIBRATE             1 999999 # equilibrate during MD every that many steps
53  INTEGER MAX_GAPS_MATCH          1 1 #
54  INTEGER ALIGN_BLOCK             1 0     # the last sequence in the first block of sequences
55  INTEGER PICK_ATOMS_SET          1 1     # index of the selected atoms set: 1 | 2 | 3
57  INTEGER SEARCH_RANDOMIZATIONS   1 0     # number of randomizations for calculating the
                                            # significance of a sequence/sequence similarity
58  INTEGER OFF_DIAGONAL            1 100   # to speed up the alignment
59  INTEGER RESTRAINT_GROUP         1 26    # physical restraint group
60  INTEGER OVERHANG                1 0     # un-penalized overhangs in protein comparisons
61  INTEGER SPLINE_SELECT           3 4 1 9 # specification of the restraints to be splined:
                                            # {\tt form  feature  group}
62  INTEGER LIBRARY_SCHEDULE        1 1     # selects schedule from the $SCHED_LIB library
64  INTEGER SPLINE_MIN_POINTS       1 5     # have at least as many intervals in a spline
65  INTEGER SHEET_H_BONDS           1 7     # specify hydrogen bonds in a beta-sheet
66  INTEGER SMOOTHING_WINDOW        1 3     # profiles are smoothed over 2*SW + 1 residues
67  INTEGER RESTRAINT_SEL_ATOMS     1 1     # a restraint other than non-bonded pair has to have at
                                            # least as many selected atoms
68  INTEGER N_SUBOPT                1 0 # number of suboptimal alignments ALIGN/ALIGN2D
69  INTEGER PROFILE_2D_PHYS         1 35    # 1 ... 39 physical type to be presented as 2D
                                            # energy profile2
70  INTEGER MIN_LOOP_LENGTH         0       # inter-segment minimal lengths in SEGMENT_MATCHING
71  INTEGER SEGMENT_SHIFTS          0       # segment shifts +- in SEGMENT_MATCHING
72  INTEGER SEGMENT_REPORT          1 1000000 # for SEGMENT_MATCHING
73  INTEGER MNCH_LIB                1 1     # which MNCH lib to use in MAKE_RESTRAINTS
74  INTEGER SEGMENT_GROWTH_N        0       # reducing/growing segment N-termini in SEGMENT_MATCHING
75  INTEGER SEGMENT_GROWTH_C        0       # reducing/growing segment C-termini in SEGMENT_MATCHING
76  INTEGER EXPAND_CONTROL          5 9999 9999 1 10 0 # for controlling EXPAND_ALIGNMENT
 0  INTEGER NUMB_OF_SEQUENCES2      1 0     # number of sequence in ALIGNMENT2
79  INTEGER REGION_SIZE             1 20    # size of exposed region in MAKE_REGION
80  INTEGER MINMAX_LOOP_LENGTH      2 5 15  # minimal/maximal length of a loop in PICK_ATOMS
81  INTEGER MINIMAL_CHAIN_LENGTH    1 30    # length cut-off for selecting chains
82  INTEGER MINIMAL_STDRES          1 30    # min. number of standard residues
83  INTEGER NUMBER_OF_STEPS         1 1     # for calculating cavity volume
84  INTEGER MINMAX_DB_SEQ_LEN       2 0 999999 # minimal/maximal database sequence length
85  INTEGER N_PROF_ITERATIONS       1 3     # number of iterations in PROFILE_SEARCH
86  INTEGER MIN_ALN_LEN             1 50    # minimal number residues in alignment for BUILD_PROFILE
88  INTEGER END_OF_FILE             1 0     # 0 | 1 whether or not reached end of file
                                            # during READ_ALIGNMENT
89  INTEGER MIN_BASE_ENTRIES        1 1     #  minimal number of templates in EDIT_ALIGNMENT
90  INTEGER SURFTYP                 1 1     #  Surface Type for accessibility calculations
                                            # 1= contact; 2=surface
91  INTEGER SEQID_CUT               1 95    #  Sequence Identity cut-off for SEQFILTER
92  INTEGER MAX_DIFF_RES            1 30    #  Length cut-off for SEQFILTER
93  INTEGER MAX_UNALIGNED_RES       1 10    #  Cut-off for number of unaligned residues in SEQFILTER
94  INTEGER MAX_NONSTDRES           1 10    # max. number of non-standard residues
95  INTEGER EM_MAP_SIZE             1 0     # size of the density map, for EM_GRID_SEARCH
96  INTEGER NUM_STRUCTURES          1 1     # number of structures to dock in EM_GRID_SEARCH
97  INTEGER BEST_DOCKED_MODELS      1 1     # number of best docked models to keep in EM_GRID_SEARCH
98  INTEGER OVERHANG_AUTO_LIMIT     1 60    # auto_overhang effective if seq length diff greater than overhang_auto_limit
99  INTEGER CHAINS_NUM              0 1     # number of chains in input pdb filein EM_GRID_SEARCH
100 INTEGER NSEGM                   1 2     # number of segments for DRMS computation
 1  STRING  OBJECTS                 0 ''    # variable names or constants
 0  STRING  VARIABLES               0 ''    # variable names
 0  STRING  ROUTINE                 1 ''    # subroutine name
 4  STRING  ROOT_NAME               1 'undf' # root of a filename for filename construction
 5  STRING  DIRECTORY               1 ''    # directory list (e.g., \Z{dir1:dir2:dir3:./:/})
 6  STRING  FILE_ID                 1 'default' # file id for filename construction
 0  STRING  OPERATION               1 'SUM' # operation to perform: \Z{SUM} | \Z{MULTIPLY}
                                            # | \Z{DIVIDE} | \Z{POWER} | \Z{MOD}
 0  STRING  RESULT                  0 ''    # variable name for the result of operation
 0  STRING  STRING_ARGUMENTS        0 ''    # arguments for string operation
10  STRING  OBJECTS_FILE            1 'top.out' # filename
 0  STRING  INCLUDE_FILE            1 '__mod' # include file name
12  STRING  FILE                    1 'default' # partial or complete filename
13  STRING  RECORD                  1 'undefined' # contents of the input line
16  STRING  COMMAND                 1 'nothing' # Unix or DOS command
17  STRING  FILE_EXT                1 ''    # file extension for filename construction
18  STRING  OUTPUT_DIRECTORY        1 ''    # output directory
19  STRING  FILE_ACCESS             1 'SEQUENTIAL'  # file access: \Z{SEQUENTIAL} | \Z{APPEND}
20  STRING  FILE_STATUS             1 'UNKNOWN'     # file status: \Z{UNKNOWN} | \Z{OLD} | \Z{NEW}
31  STRING  BUILD_METHOD            1 'INTERNAL_COORDINATES' # method for building coordinates:
                                            # \Z{INTERNAL_COORDINATES}  | \Z{ONE_STICK}
                                            # | \Z{TWO_STICKS} | \Z{3D_INTERPOLATION}
32  STRING  DIHEDRALS               0 'PHI' 'PSI' 'CHI1' 'CHI2' 'CHI3' 'CHI4' # dihedral angle type
                                            # selection: \Z{phi}  | \Z{psi}  | \Z{omega} | \Z{chi1}
                                            # | \Z{chi2} | \Z{chi3} | \Z{chi4} | \Z{chi5} | \Z{alpha}
33  STRING  RES_TYPES               1 'ALL' # residue type selection
34  STRING  ATOM_TYPES              1 'ALL' # atom type selection
35  STRING  VARIABILITY_FILE        1 'undefined' # output filename
36  STRING  ALIGN_CODES             0 'all' # codes of proteins in the alignment
37  STRING  ATOM_FILES              0 ''    # complete or partial atom filenames
38  STRING  OUTPUT                  1 'LONG'  # what and/or how to output
39  STRING  CHANGE                  1 'RANDOMIZE' # what to do: \Z{RANDOMIZE} | \Z{OPTIMIZE}
40  STRING  FIT_ATOMS               1 'CA'  # atom type(s) being superposed
41  STRING  MODEL_FORMAT            1 'PDB' # selects input atom file format:
                                            # \Z{PDB} | \Z{CHARMM} | \Z{UHBD}
42  STRING  SEQUENCE                1 'undefined' # protein code in the alignment whose
                                            # topology is constructed
43  STRING  RESTRAINT_TYPE          1 'STEREO' # restraint type to be calculated:
                                            # \Z{STEREO} | \Z{BOND} | \Z{ANGLE} | \Z{IMPROPER}
                                            # | \Z{DIHEDRAL} | \Z{SPHERE}
                                            # | \Z{SPHERE14} | \Z{LJ} | \Z{LJ14} | \Z{COULOMB}
                                            # | \Z{COULOMB14} | \Z{DISTANCE} | \Z{USER_DISTANCE}
                                            # | \Z{NONB_PAIR_SPLINE} | \Z{PHI-PSI_BINORMAL}
                                            # | \Z{PHI_DIHEDRAL}
                                            # | \Z{PSI_DIHEDRAL} | \Z{OMEGA_DIHEDRAL}
                                            # | \Z{CHI1_DIHEDRAL} | \Z{CHI2_DIHEDRAL}
                                            # | \Z{CHI3_DIHEDRAL} | \Z{CHI4_DIHEDRAL}
44  STRING  ALIGNMENT_FORMAT        1 'PIR' # format of the alignment file: \Z{PIR} | \Z{PAP}
                                            # | \Z{QUANTA} | \Z{INSIGHT} | \Z{FASTA}
46  STRING  ALIGNMENT_FEATURES      1 'INDICES CONSERVATION' # what alignment features to write out:
                                            # \Z{ACCURACY} | \Z{HELIX} | \Z{BETA}
                                            # | \Z{ACCESSIBILITY} | \Z{STRAIGHTNESS}
                                            # | \Z{CONSERVATION} | \Z{INDICES} | \Z{ALL} | \Z{GAPS}
47  STRING  RESIDUE_TYPE            1 'undefined' #
48  STRING  MATRIX_FILE             1 'family.mat' # the filename of the pairwise distance matrix
49  STRING  BASIS_PDF_WEIGHT        1 'LOCAL' # a method for calculation of basis pdf weights:
                                            # \Z{LOCAL} | \Z{GLOBAL}
50  STRING  DISTANCE_ATOMS          2 'CA' 'CA' # atom types for distance generation
51  STRING  REFERENCE_ATOM          1 ''    # reference atom name in SUPERPOSE
52  STRING  undefined91             1 ''
53  STRING  ATOM_IDS                0 ''    # atom ids: \Z{atom:residue_id[:chain_id]}
54  STRING  SPHERE_CENTER           2 'undefined' 'undefined' # '\#RES1:C' 'ATOM_NAME'
55  STRING  SELECTION_MODE          1 'ATOM' # selecting what: \Z{ATOM} | \Z{RESIDUE}
56  STRING  SELECTION_SEARCH        1 'SEGMENT' # search method: \Z{SPHERE} | \Z{SEGMENT}
                                            # | \Z{SPHERE_SEGMENT}
57  STRING  SELECTION_STATUS        1 'INITIALIZE' # what to do with selected atoms:
                                            # \Z{ADD} | \Z{REMOVE} | \Z{INITIALIZE}
58  STRING  SELECTION_SEGMENT       2 '' '' # \Z{RES:CHN} ids for the first and last residues
                                            # in a chain/segment; or 'LOOPS'
59  STRING  SELECTION_FROM          1 'ALL' # selecting from: \Z{ALL} | \Z{SELECTED}
60  STRING  ALIGN_CODES2            0 'all' # align codes for alignment2
61  STRING  MD_RETURN               1 'FINAL' # return MODEL with \Z{MINIMAL} energy or \Z{FINAL} MODEL
62  STRING  ATOM_CLASSES_FILE       1 '$(LIB)/atmcls-melo.lib' # library with atom class definitions
                                            # for MODELLER non-bonded restraints
63  STRING  RR_FILE                 1 '$(LIB)/as1.sim.mat' # input residue-residue scoring file
64  STRING  SEQ_DATABASE_FILE       1 '$(LIB)/CHAINS_all.seq' # file with a list of sequence codes
65  STRING  MODEL_SEGMENT           2 'FIRST:@' 'LAST:' # segment to be read in
66  STRING  MODEL2_SEGMENT          2 'FIRST:@' 'LAST:' # segment to be read in
68  STRING  SEARCH_SORT             1 'LONGER' # which sequence to use for normalization when
                                            # sorting the hit list: \Z{SHORTER} | \Z{LONGER}
70  STRING  CHAINS_LIST             1 '$(LIB)/CHAINS_3.0_40_XN.cod' # file with sequences
71  STRING  SEGMENT_IDS             0 ''    # new segment ids
72  STRING  RESIDUE_IDS             0 ''    # residue id (number:chnid)
73  STRING  ALIGN_WHAT              1 'BLOCK' # what to align in ALIGN; \Z{BLOCK} | \Z{ALIGNMENT}
                                            # | \Z{LAST} | \Z{PROFILE}
74  STRING  CLUSTER_METHOD          1 'RMSD' # what distance function to use;
                                            # \Z{RMSD} | \Z{MAXIMAL_DISTANCE}
75  STRING  SEARCH_GROUP_LIST       1 '$(LIB)/CHAINS_3.0_40_XN.grp' # file with 40\% groups of
                                            # sequences
76  STRING  RESTYP_LIB_FILE         1 '$(LIB)/restyp.lib' # residue type library
77  STRING  SWAP_ATOMS_IN_RES       1 ''    # minimize RMS by swapping atoms in these residues
                                            # (1 char code: 'DEFHLNQRVY')
78  STRING  ATOM_FILES2             0 ''    # complete or partial atom filenames for ALIGNMENT2
79  STRING  INPUT_WEIGHTS_FILE      1 '' # Exteral weight matrix input to MODELLER (SALIGN/ALIGN)
80  STRING  OUTPUT_WEIGHTS_FILE     1 '' # File into which the weight file is wriiten (iff WRITE_WEIGHTS = 'on')
81  STRING  INPUT_PROFILE_FILE      1 '' # multiple sequece alignment read into MODELLER for profile-profile alignments   
82  STRING  OUTPUT_PROFILE_FILE     1 '' # 
83  STRING  STRUCTURE_TYPES         1 'structure' # 'structure structureX structureN structureM
                                            # structureF structureE structureU'
84  STRING  SEQ_DATABASE_FORMAT     1 'PIR' # 'PIR' 'FASTA' 'BINARY'; for READ/WRITE_SEQUENCE_DB
85  STRING  PROFILE_FORMAT          1 'TEXT' # 'TEXT' | 'BINARY' ; for READ/WRITE_PROFILE
86  STRING  PROFILE_LIST_FILE       1 ''    # list of profiles for PROFILE_PROFILE_SCAN
87  STRING  EDIT_ALIGN_CODES        0 'last' # codes of proteins in the alignment to be edited
88  STRING  BASE_ALIGN_CODES        0 'rest' # codes of proteins in the alignment to be used as the base
89  STRING  COMPARISON_TYPE         1 'MAT' # 'MAT' or 'PSSM' for comparing matrices or PSSMs when
                                            # profiles are compared
90  STRING  MATRIX_COMPARISON       1 'CC'  # 'CC', 'MAX', 'AVE', - kinds of matrix comparisons
91  STRING  TREE_TYPE               1 'DEFAULT'  # 'DEFAULT', 'BUILD' - seq.tree types
                                            # (default = malign)
92  STRING  EDIT_FILE_EXT           2 '.pdb' '_fit.pdb' # old and new file extensions for filename
                                            # construction in MALIGN3D
93  STRING  ALIGNMENT_TYPE          1 'PROGRESSIVE' # 'PAIRWISE' 'TREE' 'PROGRESSIVE' for SALIGN
94  STRING  RESIDUE_TYPE2           1 'REGULAR' # 'REGULAR' for 20 residues of 'GENERALIZED' otherwise
95  STRING  WEIGHTS_TYPE            1 'SIMILAR' # or 'DISTANCE' for the kind of substitution values
96  STRING  OUTPUT_GRP_FILE         1 'seqfilt.grp' # output file for seqfilter groups
97  STRING  OUTPUT_COD_FILE         1 'seqfilt.cod' # output file for seqfilter representative groups
98  STRING  OUTPUT_SCORE_FILE       1 'default' # output file for writing out individual scores in seqfilter
99  STRING  EM_DENSITY_FORMAT       1 'XPLOR' # input density map file format for
                                            # EM_GRID_SEARCH; \Z{MRC} | \Z{XPLOR}
100 STRING  DOCK_ORDER              1 'INPUT' # order to dock proteins in EM_GRID_SEARCH;
                                            # \Z{INPUT} | \Z{SIZE}
101 STRING  START_TYPE              1 'CENTER' # how to start EM_GRID_SEARCH;
                                            # \Z{CENTER} | \Z{ENTIRE} | \Z{SPECIFIC}
102 STRING  TRANSLATE_TYPE          1 'NONE' # how to perform translations during EM_GRID_SEARCH;
                                            # \Z{NONE} | \Z{RANDOM} | \Z{EXHAUSTIVE}
103 STRING  FILTER_TYPE             1 'NONE' # how to filter the density during EM_GRID_SEARCH;
                                            # \Z{NONE} | \Z{THRESHOLD} | \Z{THRESHOLD2} |
                                            # \Z{SQUARE} | Z{LAPLACIAN} 
                                            # \Z{SQUARE}
104 STRING  EM_FIT_OUTPUT_FILE      1 ''    # output file for EM_GRID_SEARCH
105 STRING  EM_PDB_NAME             0       # PDB files to read for EM_GRID_SEARCH
107 STRING  DENSITY_TYPE            1 'SPHERE' # Function used to calculate density map cross-correlation
                                            # in EM_GRID_SEARCH; \Z{SPHERE} | \Z{GAUSS} | \Z{HYBRID} | 
                                            # \Z{GAUSS_NORM} | \Z{TRACE} 
108 STRING  BKGRND_PRBLTY_FILE      1 '$(LIB)/blosum62_bkgrnd.prob' # background probability values for a 
                                            # residue-residue substitution matrix
109 STRING  RR_IJ_FILE              1 '$(LIB)/blosum62.qij.mat' # input residue-residue target frquency file
110 STRING  ALN_BASE_FILENAME       1 'alignment' # basename for construction of alignment filenames
                                            # used by PROFILE_PROFILE_SCAN
111 STRING  ASSESS_METHOD           1 ''    # ASSESS_MODEL: assessment method to use
112 STRING  PSSM_WEIGHTS_TYPE       1 'HH1' # type of weighting to calculate pssm; \Z{HH0} | \Z{HH1} |
                                            # \Z{PSIC}
113 STRING  SUMMARY_FILE            1 'ppscan.sum' # output file for writing PPSCAN summary
114 STRING  DENDROGRAM_FILE         1 '' # File into which the SALIGN dendrogram is written out
115 STRING  PSSM_FILE               1 'buildp.pssm' # File into which the BUILD_PROFILE PSSM is written out
116 STRING  PSSMDB_NAME             1 'profiles.pssm' # Filename for PSSM database
117 STRING  DNR_ACCPT_LIB           1 ''
118 STRING  EXT_TREE_FILE           1 ''    # To read a pre computed tree for SALIGN
119 STRING  CC_FUNC_TYPE            1 'CCF' # Type of cross-correlation to use for EM density
31  LOGICAL FIT                     1 on    # whether to do pairwise least-squares fitting or
                                            # ALIGN2D alignment
32  LOGICAL SUPERPOSE_REFINE        1 off   # whether to refine the superposition
38  LOGICAL WRITE_FIT               1 off   # whether to write out fitted coordinates to .fit files
39  LOGICAL ASGL_OUTPUT             1 off   # whether to write output for ASGL
40  LOGICAL ADD_RESTRAINTS          1 off   # whether to add new restraints to existing restraints
41  LOGICAL ADD_SEGMENT             1 off   # whether to add the new segments to the list of segments
42  LOGICAL REMOVE_GAPS             1 on    # whether to remove all-gap positions in input alignment
44  LOGICAL LOCAL_ALIGNMENT         1 off   # whether to do local as opposed to global alignment
48  LOGICAL INITIALIZE_XYZ          1 on    # whether to use IC entries to calculate all coordinates
49  LOGICAL ADD_SEQUENCE            1 off   # whether to add the new sequences to the existing alignment
50  LOGICAL ALIGN3D_TRF             1 off   # whether to transform the distances before
                                            # dynamic programming
51  LOGICAL PATCH_DEFAULT           1 on    # whether to do default NTER and CTER patching
52  LOGICAL INTERSEGMENT            1 on    # whether to restrain inter-segment non-bonded pairs
53  LOGICAL ALIGN3D_REPEAT          1 off   # do several starts to maximize number of
                                            # equivalent positions
54  LOGICAL ALIGN_ALIGNMENT         1 off   # writing out an alignment of alignments (for *)
55  LOGICAL INIT_VELOCITIES         1 on    # whether to initialize velocities before MD
56  LOGICAL ADD_SYMMETRY            2 off on # whether to add segment pair, add atoms to segment pair
57  LOGICAL SPLINE_ON_SITE          1 off   # whether to convert restraints to splines
58  LOGICAL ADD_PARAMETERS          1 off   # whether to add new parameters to existing ones
59  LOGICAL ADD_TOPOLOGY            1 off   # whether to add new residue topologies to existing ones
60  LOGICAL WRITE_WHOLE_PDB         1 on    # whether to write out all lines in the input PDB file
61  LOGICAL WRITE_ALL_ATOMS         1 on    # whether to write all atoms, even if unselected
62  LOGICAL CURRENT_DIRECTORY       1 on    # whether to write output .fit files to current directory
63  LOGICAL DETAILED_DEBUGGING      1 off   # whether to evaluate energy and derivatives wrt
                                            # each restraint
66  LOGICAL FAST_SEARCH             1 off   # whether to use fast sequence search or not
67  LOGICAL DATA_FILE               1 off   # whether results go to a separate file or not
68  LOGICAL NORMALIZE_PROFILE       1 off   # whether to normalize energy/violations profiles or
                                            # not, by the number of terms per residue
70  LOGICAL RESIDUE_SPAN_SIGN       1 on    # whether to do N*(N-1)/2 loop for atom pairs in
                                            # MAKE_RESTRAINTS RESTRAINT_TYPE = 'distance'
72  LOGICAL READ_WEIGHTS            1 off   # whether to read the whole NxM weight matrix for ALIGN*
74  LOGICAL DIH_LIB_ONLY            1 off   # whether to use only library, not homologs for
                                            # dihedral angle rsrs
75  LOGICAL NO_TER                  1 off   # whether to not write TER into PDB
76  LOGICAL WRITE_WEIGHTS           1 off   # whether to write the whole NxM weight matrix for ALIGN*
78  LOGICAL READ_PROFILE            1 off   # whether to read str profile for ALIGN2D
79  LOGICAL WRITE_PROFILE           1 off   # whether to write str profile for ALIGN2D
80  LOGICAL WEIGH_SEQUENCES         1 off   # whether or not to weigh sequences in a profile
81  LOGICAL FOLLOW_TREE             1 off   # whether or not to follow a tree for MALIGN3D
82  LOGICAL CHOP_NONSTD_TERMINII    1 on    # whether or not to chop non-standard N- and/or
                                            # C-terminal residue in MAKE_CHAINS
83  LOGICAL NORMALIZE_PP_SCORES     1 off   # whether or not to normalize position-position
                                            # scores in SALIGN
84  LOGICAL IMPROVE_ALIGNMENT       1 on    # whether or not to optimize alignment in SALIGN
85  LOGICAL FIT_ON_FIRST            1 off   # whether or not all structures are to be fit on the first structure, given the final alignment
86  LOGICAL FIT_PDBNAM              1 on    # whether or not to add _fit to the PDB file name
                                            # in output alifile by SALIGN
87  LOGICAL ORIENT                  1 off   # whether or not to orient structure before volume
                                            # calculation in WRITE_DATA
88  LOGICAL CLEAN_SEQUENCES         1 on    # whether or not clean non-standard residues
89  LOGICAL CLOSE_FILE              1 on    # whether or not to close the alignment file at the
                                            # end of READ_ALIGNMENT
90  LOGICAL REWIND_FILE             1 off   # whether or not to rewind the alignment file at the
                                            # start of READ_ALIGNMENT
91  LOGICAL ACCURACY_BORDER         1 off   # whether or not the closure on the surface accepts
                                            # diagonal cords
92  LOGICAL GAP_FUNCTION            1 off   # whether or not to switch on functional gap penalty
                                            # in salign
93  LOGICAL SUBSTITUTION            1 off   # whether to use the background in PSSM comparison
94  LOGICAL CHECK_PROFILE           1 on    # whether to monitor profile degenration
95  LOGICAL OUTPUT_SCORES           1 off   # whether to output individual scores in a build_profile scan
96  LOGICAL GAPS_IN_TARGET          1 off   # whether to include gaps in target when using build_profile
97  LOGICAL APPEND_ALN              1 off   # whether to append profiles to existing alignment arrays
98  LOGICAL SIMILARITY_FLAG         1 off   # when turned on, the SALIGN command does not convert numbers
                                            # into a distance sense.
99  LOGICAL SCORE_STATISTICS        1 on    # PROFILE_PROFILE_SCAN: if turned off, the 
                                            # length-normalized z-scores are not computed
100 LOGICAL OUTPUT_ALIGNMENTS       1 on    # PROFILE_PROFILE_SCAN: if turned off, no alignments will be
                                            # written out.
101 LOGICAL REFINE_LOCAL            1 on    # whether to refine superposition using locally similar
                                            # substructures
102 LOGICAL WRITE_SUMMARY           1 on    # whether to write summary information for PPSCAN
103 LOGICAL AUTO_OVERHANG           1 off   # overhang values made dependent on sequence length difference
104 LOGICAL WRITE_PSSM              1 off   # flag to write out the PSSM into the log file
--- END OF FILE

The third column contains a number of values for each of the options if this 
number is fixed, otherwise it contains 0.

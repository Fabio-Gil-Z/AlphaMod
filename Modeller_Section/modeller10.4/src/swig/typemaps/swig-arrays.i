/* This file is auto-generated, containing multi-argument and
   newobject typemaps */

%newobject mod_file_expand;
%newobject mod_file_prep;
%newobject mod_file_exists_z_path;
%newobject mod_pdb_filename_get;
%newobject mod_fullfn;
%newobject mod_license_info_get;
%newobject mod_bindir_get;
%newobject mod_inifil_get;
%newobject mod_uname;
%newobject mod_current_time_get;
%newobject mod_deprecation_mode_get;
%newobject mod_header_get;
%newobject mod_short_version_get;
%newobject mod_long_version_get;
%apply (const float VARARRAY[], int N_VARARRAY) { (const float pcsr[], int n_pcsr) };
%apply (const float VARARRAY[], int N_VARARRAY) { (const float state[], int n_state) };
%apply (const float VARARRAY[], int N_VARARRAY) { (const float restraints_filter[], int n_restraints_filter) };
%apply (const float VARARRAY[], int N_VARARRAY) { (const float viol_report_cut[], int n_viol_report_cut) };
%apply (const float VARARRAY[], int N_VARARRAY) { (const float viol_report_cut2[], int n_viol_report_cut2) };
%apply (const float VARARRAY[], int N_VARARRAY) { (const float restraint_parameters[], int n_restraint_parameters) };
%apply (const float VARARRAY[], int N_VARARRAY) { (const float schedule_scale[], int n_schedule_scale) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int sel1[], int n_sel1) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int residue_ids[], int n_residue_ids) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int iftyp[], int n_iftyp) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int segment_growth_n[], int n_segment_growth_n) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int min_loop_length[], int n_min_loop_length) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int chains_num[], int n_chains_num) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int FOO[], int n_FOO) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int sel3[], int n_sel3) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int segment_shifts[], int n_segment_shifts) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int inds[], int n_inds) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int renumber_residues[], int n_renumber_residues) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int modal[], int n_modal) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int sel2[], int n_sel2) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int sel[], int n_sel) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int indatm[], int n_indatm) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int natm[], int n_natm) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int segment_growth_c[], int n_segment_growth_c) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int resoffs[], int n_resoffs) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int indices[], int n_indices) };
%apply (const int VARARRAY[], int N_VARARRAY) { (const int atom_ids[], int n_atom_ids) };
%apply (const char STRARRAY[], int STRLEN) { (const char selection_segment[2], int selection_segment_len) };
%apply (const char STRARRAY[], int STRLEN) { (const char edit_file_ext[2], int edit_file_ext_len) };
%apply (const char STRARRAY[], int STRLEN) { (const char sphere_center[2], int sphere_center_len) };
%apply (const char STRARRAY[], int STRLEN) { (const char model2_segment[2], int model2_segment_len) };
%apply (const char STRARRAY[], int STRLEN) { (const char model_segment[2], int model_segment_len) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char edit_align_codes[], int edit_align_codes_len, int n_edit_align_codes) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char em_pdb_name[], int em_pdb_name_len, int n_em_pdb_name) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char base_align_codes[], int base_align_codes_len, int n_base_align_codes) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char align_codes2[], int align_codes2_len, int n_align_codes2) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char objects[], int objects_len, int n_objects) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char segment_ids[], int segment_ids_len, int n_segment_ids) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char align_codes[], int align_codes_len, int n_align_codes) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char dihedrals[], int dihedrals_len, int n_dihedrals) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char FOO[], int FOO_len, int n_FOO) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char atom_ids[], int atom_ids_len, int n_atom_ids) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char atom_files[], int atom_files_len, int n_atom_files) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char atms[], int atms_len, int n_atms) };
%apply (const char VARSTRARRAY[], int STRLEN, int N_VARSTRARRAY) { (const char atom_files2[], int atom_files2_len, int n_atom_files2) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **feat, int *n_feat) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **sel1out, int *n_sel1out) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **newindatm, int *n_newindatm) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **indatm, int *n_indatm) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **nprofres, int *n_nprofres) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **modal, int *n_modal) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **FOO, int *n_FOO) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **ncut, int *n_ncut) };
%apply (int **OUTVARARRAY, int *N_OUTVARARRAY) { (int **selout, int *n_selout) };
%apply (float **OUTVARARRAY, int *N_OUTVARARRAY) { (float **profres, int *n_profres) };
%apply (float **OUTVARARRAY, int *N_OUTVARARRAY) { (float **dstate, int *n_dstate) };
%apply (float **OUTVARARRAY, int *N_OUTVARARRAY) { (float **param, int *n_param) };
%apply (float **OUTVARARRAY, int *N_OUTVARARRAY) { (float **violtyp, int *n_violtyp) };
%apply (float **OUTVARARRAY, int *N_OUTVARARRAY) { (float **state, int *n_state) };
